#
# from unittest.mock import patch
#
# from django.core.exceptions import ValidationError
# from django.core.files.uploadedfile import SimpleUploadedFile
# from django.test import TestCase
#
# from tasks.views import validate_and_save_file
#
#
# class MalwareScanTests(TestCase):
#     @patch('tasks.views.scan_file')
#     def test_scan_file_malware_detection(self, mock_scan):
#         """Test that a malware scan triggers validation error"""
#         mock_scan.side_effect = ValidationError("The uploaded file contains malware.")
#         uploaded_file = SimpleUploadedFile('test.csv', b"header1,header2\nmalicious_value")
#         with self.assertRaises(ValidationError):
#             validate_and_save_file(uploaded_file)
